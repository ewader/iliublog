<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>python on 图南博客</title>
    <link>https://iliu.org/tags/python/</link>
    <description>Recent content in python on 图南博客</description>
    <image>
      <title>图南博客</title>
      <url>https://iliu.org/papermod-cover.png</url>
      <link>https://iliu.org/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 14 Jan 2022 09:34:09 +0000</lastBuildDate><atom:link href="https://iliu.org/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django部署在debian11服务器</title>
      <link>https://iliu.org/4029.html</link>
      <pubDate>Fri, 14 Jan 2022 09:34:09 +0000</pubDate>
      
      <guid>https://iliu.org/4029.html</guid>
      <description>Python加Django开发网页程序真的很方便，连我这个菜鸟看看教程之类的也能写出来程序。本地测试完了之后，想在服务器上跑跑看，结果发现，要发布到服务器端，可是比PHP程序要麻烦的多，从昨天下午就开始看相关的教程，后来在宝塔面板下部署成功了，但是我不想用宝塔面板，于是继续折腾的道路，经过一天的折腾，重装了好几次测试的服务器，终于算是部署成功了，虽然只是一个测试的项目，但是总算又迈出去了一步不是。项目采用nginx+uwsgi+django。服务器端采用的是debian11。
在服务器安装python3 由于debian11本身带有3.9.2版本的，所以，这里就不安装了。直接在data文件夹里建立一个虚拟目录。
python3 -m venv env 然后进入虚拟环境 source env/bin/activate 安装环境 可以用本地服务器的导出的requirements.txt，命令是： pip freeze &amp;gt; requirements.txt #在本地虚拟环境使用 切换到服务器端，上传这个文件到data目录下 pip install -r requirements.txt #这样就可以在建立起和你的本地一样的环境 pip install uwsgi#虚拟环境里装了后，需要在真实环境再运行一次 上传本地的项目到data
在与manage.py同级目录下建立一个新文件。uwsgi.ini
#添加配置选择 &amp;#91;uwsgi] #配置和nginx连接的socket连接 socket=127.0.0.1:8997 #配置项目路径，项目的所在目录 chdir=/data/wwwroot/mysite/ #配置wsgi接口模块文件路径,也就是wsgi.py这个文件所在的目录 wsgi-file=myblog/wsgi.py #配置启动的进程数 processes=4 #配置每个进程的线程数 threads=2 #配置启动管理主进程 master=True #配置存放主进程的进程号文件 pidfile=uwsgi.pid #配置dump日志记录 daemonize=uwsgi.log home=/data/env/ 安装nginx 由于使用习惯了oneinstack,这里继续用这个面板安装，只需安装nginx即可，可去官网看安装方法，安装完成后，./vhost建立虚拟主机。虚拟主机的目录定位到你放置项目的位置。然后在usr/local/nginx/conf/vhost/下编辑你创建的这个主机的conf。加入以下的语句。
location / { include uwsgi_params; uwsgi_pass 127.0.0.1:8997; #端口要和uwsgi里配置的一样 uwsgi_param UWSGI_SCRIPT myblog.wsgi; #wsgi.py所在的目录名+.wsgi uwsgi_param UWSGI_CHDIR /data/wwwroot/**/; #项目路径 } location /static/ { alias /data/wwwroot/**/static/; #静态资源路径 } 启动nginx和uwsgi service nginx restart 进项目目录，虚拟环境下 uwsgi --ini uwsgi.</description>
    </item>
    
    <item>
      <title>python开发web程序，最好还是在Linux下</title>
      <link>https://iliu.org/3947.html</link>
      <pubDate>Tue, 14 Dec 2021 12:57:17 +0000</pubDate>
      
      <guid>https://iliu.org/3947.html</guid>
      <description>看了一些python教程，很多都是在windows下进行的开发，由于老刘对linux还算是有一丢丢的了解，所以从开始就在ubuntu下进行。前两天由于要在windows下用电脑，用完之后懒得重启，由于win10里也配置好了python的开发环境，所以就在win下写了一些代码。
写完之后，浏览器打开显示404错误，小心的查代码，也找不到错误的地方，明明有这个网页的模板，就是显示404，折腾了1个多小时。也每发现错误之处。后来实在是烦躁，干脆不搞了。
隔了一天，进入ubuntu，浏览器打开，还是显示404，这点没错，说明程序确实有问题，但是浏览器里给出了错误出在那一个文件，那一行。看了一下是把模板里的一个路由users写成了user了，然后就找不到user这个页面。就是这么点错误，在win下就是不给你详细的出错信息。
后来看了一下windows的文档，在里面也明确的说，开发python的web程序，建议使用linux。所以，新手朋友如果想学python，不妨先熟悉一下LINUX。其实也是蛮简单的。磨刀不误砍柴工。</description>
    </item>
    
    <item>
      <title>用input和字典初步实现我的一点小想法</title>
      <link>https://iliu.org/3929.html</link>
      <pubDate>Sat, 30 Oct 2021 04:28:51 +0000</pubDate>
      
      <guid>https://iliu.org/3929.html</guid>
      <description>从决心要学Python开始，到现在差不多一周的时间了吧，买了一本《Python编程，从入门到实践》的书，目前看到了第九章，函数篇。
通过上面8章的学习，基本上有了实现我那个小项目的想法。今天根据前八章的知识，初步用input函数，实现了用特殊关键字的查询。继续加油。
kehu = {&#39;张明&#39;:{&#39;右眼度数&#39;:&#39;-1.25&#39;,&#39;左眼度数&#39;:&#39;-2.00&#39;,&#39;瞳距&#39;:&#39;60mm&#39;,&#39;镜架&#39;:&#39;纯钛&#39;,&#39;镜片&#39;:&#39;康耐特&#39;,&#39;价格&#39;:&#39;￥450&#39;,&#39;手机号码&#39;:&#39;13027511600&#39;,},}xingming = input(&#34;请输入你的姓名：&#34;)shoujihaoma = input(&#34;请输入你的手机号码：&#34;)for name , info in kehu.items():if name == xingming and info[&#39;手机号码&#39;] == shoujihaoma:right = f&#34;{info[&#39;右眼度数&#39;]}&#34;lift = f&#34;{info[&#39;左眼度数&#39;]}&#34;tongju = f&#34;{info[&#39;瞳距&#39;]}&#34;jingjia = f&#34;{info[&#39;镜架&#39;]}&#34;jingpian = f&#34;{info[&#39;镜片&#39;]}&#34;jiage = f&#34;{info[&#39;价格&#39;]}&#34;print(&#34;验光单&#34;)print(f&#34;姓名：{name}&#34;)print(f&#34;右眼度数:{right} 左眼度数：{lift}&#34;)print(f&#34;瞳距：{tongju} &#34;)else:print(&#34;您输入的资料不正确，请重新输入&#34;)虽然简单，确实独立写出来的，应该是一大步吧。
学好了，用python自己做个博客，哈哈哈</description>
    </item>
    
  </channel>
</rss>
